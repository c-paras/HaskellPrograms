{-
   COPYRIGHT (C) 2017 COSTA PARASKEVOPOULOS.
   PERFORMS SIMPLE IO BY WRITING AND READING FILES.
-}

MODULE EX04 WHERE

IMPORT DATA.CHAR
IMPORT SYSTEM.ENVIRONMENT
IMPORT SYSTEM.IO

-- READS A TEXT FILE AND WRITES OUT A CAPITILIZED VERSION TO ANOTHER FILE
CAPITALISE :: FILEPATH -> FILEPATH -> IO ()
CAPITALISE F G = DO
  S <- READFILE F
  WRITEFILE G (CAP S)
  WHERE

    -- CAPITALIZES INPUT STRING
    CAP :: STRING -> STRING
    CAP ""     = ""
    CAP (X:XS) = (TOUPPER X) : (CAP XS)

-- SUMS INTEGERS SEPARATED BY NEWLINES IN A FILE AND WRITES THE RESULT
-- TO ANOTHER FILE, BOTH FILENAMES ARE SPECIFIED AS CMD ARGS
SUMFILE :: IO ()
SUMFILE = DO
  [F, G] <- GETARGS
  S      <- READFILE F
  LET NUMS = LINES S
  WRITEFILE G $ (SHOW (FOLDL (+) 0 (TOINT NUMS))) ++ "\N"
  WHERE

    -- CONVERTS LIST OF STRING TO LIST OF INTEGER
    TOINT :: [STRING] -> [INTEGER]
    TOINT [] = []
    TOINT (X:XS) = PARSEINT X : TOINT XS

    -- RETURNS 0 IF STRING CANNOT BE PARSED (DOESN'T AFFECT THE SUM)
    PARSEINT :: STRING -> INTEGER
    PARSEINT S = CASE (READS S :: [(INTEGER, STRING)]) OF
                   [(I, _)] -> I
                   _        -> 0
